{"version":3,"file":"static/js/469.3baed2c1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/HomePage/HomePage.module.css?b0f5","webpack://react-homework-template/./src/components/HomePage/ClientForm.module.css?ac0e","components/HomePage/ClientForm.jsx","redux/clients/selectors.js","webpack://react-homework-template/./src/components/HomePage/ClientList.module.css?7b0b","components/HomePage/ClientList.jsx","components/HomePage/HomePage.jsx","pages/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listClientsBox\":\"HomePage_listClientsBox__lO5Os\",\"date\":\"HomePage_date__ddhw5\",\"btn_addRecord\":\"HomePage_btn_addRecord__5Ji7x\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ClientForm_form__ZNfSa\",\"btn_close\":\"ClientForm_btn_close__PrguA\",\"title\":\"ClientForm_title__zR9Xb\",\"selectTime\":\"ClientForm_selectTime__VihyU\",\"btn_free\":\"ClientForm_btn_free__QtqEN\",\"btn_choose\":\"ClientForm_btn_choose__lSDmb\",\"btn_disabled\":\"ClientForm_btn_disabled__KTiFE\",\"btn_save\":\"ClientForm_btn_save__JxAxF\",\"btn_cancel\":\"ClientForm_btn_cancel__NQtXI\"};","import React, { useState, useEffect, useRef } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Col from 'react-bootstrap/Col';\nimport { FaAngleDoubleDown } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from '../../redux/auth/selectors';\nimport {\n  addClient,\n  allClients,\n  editClient,\n} from '../../redux/clients/operations';\nimport css from './ClientForm.module.css';\nimport toast from 'react-hot-toast';\nimport { IoMdClose } from 'react-icons/io';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Поле \"Ім\\'я\" обов\\'язкове для заповнення'),\n  phone: Yup.string(),\n  serviceType: Yup.array()\n    .of(Yup.string())\n    .min(1, 'Оберіть хоча б один вид послуги')\n    .required('Оберіть вид послуги'),\n  notes: Yup.string(),\n});\n\nconst ClientForm = ({\n  date,\n  handleAddRecordForm,\n  dateClients,\n  clientToEdit,\n}) => {\n  const dispatch = useDispatch();\n  const [showNotes, setShowNotes] = useState(false);\n  const [visitTimes, setVisitTimes] = useState([]);\n  const [visitDate, setVisitDate] = useState({ date: '', month: '', year: '' });\n  const [chooseVisitTimes, setChooseVisitTimes] = useState(false);\n  const nextInputRef = useRef(null);\n  const user = useSelector(selectUser);\n\n  /*\n  useEffect(() => {\n    dispatch(allClients());\n  }, [dispatch]);\n*/\n  useEffect(() => {\n    if (clientToEdit) {\n      setVisitTimes([\n        ...clientToEdit.visitTimes.map(time => ({ ...time, isSelected: true })),\n      ]);\n      setVisitDate({\n        date: clientToEdit.date,\n        month: clientToEdit.month,\n        year: clientToEdit.year,\n      });\n    }\n  }, [clientToEdit]);\n  // console.log(visitDate);\n\n  const handleDateVisitChange = e => {\n    const { name, value } = e.target;\n    setVisitDate(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const isTimeSlotAvailable = (hour, minute) => {\n    const selectedTime = hour * 60 + minute;\n\n    for (const client of dateClients) {\n      if (client._id === clientToEdit?._id) continue;\n\n      const visitTime = client.visitTimes[0].visitTime;\n      const visitEndTime =\n        client.visitTimes[client.visitTimes.length - 1].visitEndTime;\n      const clientStartTime =\n        parseInt(visitTime.split(':')[0]) * 60 +\n        parseInt(visitTime.split(':')[1]);\n      const clientEndTime =\n        parseInt(visitEndTime.split(':')[0]) * 60 +\n        parseInt(visitEndTime.split(':')[1]);\n\n      if (selectedTime >= clientStartTime && selectedTime <= clientEndTime) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (visitTimes.length === 0) {\n      setChooseVisitTimes(true);\n    }\n\n    if (clientToEdit) {\n      // console.log(clientToEdit);\n      const { _id, owner, name, ...rest } = values;\n      const updatedClient = {\n        id: clientToEdit._id,\n        values: {\n          ...rest,\n          name: name.toLowerCase(),\n          visitTimes: visitTimes,\n          date: Number(visitDate.date),\n          month: Number(visitDate.month),\n          year: Number(visitDate.year),\n        },\n      };\n\n      dispatch(editClient(updatedClient))\n        .then(response => {\n          if (response.meta.requestStatus === 'fulfilled') {\n            toast.success(`Запис успішно оновлено!`, {\n              duration: 2000,\n              position: 'top-center',\n            });\n            dispatch(allClients());\n            resetForm({ values: initialValues });\n          } else if (response.meta.requestStatus === 'rejected') {\n            toast.error(\n              `Сталася помилка, запис не оновлено! Оновіть сторінку та спробуйте знову`,\n              {\n                duration: 3000,\n                position: 'top-center',\n              }\n            );\n          }\n        })\n        .catch(error => {});\n\n      handleAddRecordForm();\n      clientToEdit(null);\n      resetForm({ values: initialValues });\n    } else {\n      const newClient = {\n        ...values,\n        name: values.name.toLowerCase(),\n        visitTimes: visitTimes,\n        date: date.getDate(),\n        month: date.getMonth() + 1,\n        year: date.getFullYear(),\n      };\n      //console.log(newClient);\n      dispatch(addClient(newClient))\n        .then(response => {\n          if (response.meta.requestStatus === 'fulfilled') {\n            toast.success(`Запис успішно збережено!`, {\n              duration: 2000,\n              position: 'top-center',\n            });\n            dispatch(allClients());\n            resetForm({ values: initialValues });\n          } else if (response.meta.requestStatus === 'rejected') {\n            toast.error(\n              `Сталася помилка, запис не відбувся! Оновіть сторінку та спробуйте знову`,\n              {\n                duration: 3000,\n                position: 'top-center',\n              }\n            );\n          }\n        })\n        .catch(error => {});\n      handleAddRecordForm();\n      resetForm({ values: initialValues });\n      if (nextInputRef.current) {\n        nextInputRef.current.focus();\n      }\n    }\n  };\n\n  const renderTimeButtons = () => {\n    const buttons = [];\n    const hourStart = user.workHourStart;\n    const hourEnd = user.workHourEnd - 1;\n    for (let hour = hourStart; hour <= hourEnd; hour++) {\n      for (let minute = 0; minute <= 30; minute += 30) {\n        const timeString = `${hour.toString().padStart(2, '0')}:${minute\n          .toString()\n          .padStart(2, '0')}`;\n        const isAvailable = isTimeSlotAvailable(hour, minute);\n        const isSelected = visitTimes.some(\n          time =>\n            time.visitTime === `${hour}:${minute.toString().padStart(2, '0')}`\n        );\n\n        const isEditingTime =\n          clientToEdit &&\n          visitTimes.some(time => {\n            const visitStartTime = new Date(`2000-01-01T${time.visitTime}`);\n            const visitEndTime = new Date(`2000-01-01T${time.visitEndTime}`);\n            const editingTime = new Date(\n              `2000-01-01T${hour}:${minute.toString().padStart(2, '0')}`\n            );\n\n            return editingTime >= visitStartTime && editingTime <= visitEndTime;\n          });\n\n        buttons.push(\n          <button\n            type=\"button\"\n            key={timeString}\n            onClick={() =>\n              handleTimeSelection({\n                visitTime: `${hour}:${minute.toString().padStart(2, '0')}`,\n                visitEndTime: `${hour}:${(minute + 29)\n                  .toString()\n                  .padStart(2, '0')}`,\n              })\n            }\n            className={`${\n              isSelected || isEditingTime ? css.btn_choose : css.btn_free\n            } ${!isAvailable && css.btn_disabled}`}\n            disabled={!isAvailable}\n          >\n            {timeString}\n          </button>\n        );\n      }\n    }\n    return buttons;\n  };\n\n  const handleTimeSelection = selectedTime => {\n    setVisitTimes(prevVisitTimes => {\n      const isSelected = prevVisitTimes.some(\n        time => time.visitTime === selectedTime.visitTime\n      );\n\n      if (isSelected) {\n        // Якщо вибраний час вже присутній в списку, видаляємо його\n        const newVisitTimes = prevVisitTimes.filter(\n          time => time.visitTime !== selectedTime.visitTime\n        );\n        return newVisitTimes;\n      } else {\n        // Якщо вибраний час відсутній в списку, додаємо його\n        const newVisitTimes = [\n          ...prevVisitTimes,\n          { ...selectedTime, isSelected: true },\n        ];\n        newVisitTimes.sort((a, b) => {\n          const timeA = new Date(`2000-01-01T${a.visitTime}`);\n          const timeB = new Date(`2000-01-01T${b.visitTime}`);\n          return timeA - timeB;\n        });\n\n        const allSelected = newVisitTimes.map(time => ({\n          ...time,\n          isSelected: true,\n        }));\n        return allSelected;\n      }\n    });\n  };\n\n  const initialValues = {\n    name: '',\n    phone: '',\n    serviceType: [],\n    notes: '',\n  };\n\n  return (\n    <Col className=\"ps-4 pe-4 pb-2 border-top\">\n      <Formik\n        initialValues={clientToEdit ? clientToEdit : initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form}>\n          <IoMdClose className={css.btn_close} onClick={handleAddRecordForm} />\n          <h5 className={css.title}>Запис клієнта</h5>\n          <div>\n            <Field\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Введіть ім'я клінта\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" className=\"text-danger\" />\n          </div>\n          <div className=\"pt-2\">\n            <Field\n              type=\"text\"\n              id=\"phone\"\n              name=\"phone\"\n              placeholder=\"Введіть номер телефону\"\n              innerRef={nextInputRef}\n            />\n            <ErrorMessage\n              name=\"phone\"\n              component=\"div\"\n              className=\"text-danger\"\n            />\n          </div>\n          <div>\n            {user.beautyMaster === 'Hair master' && (\n              <>\n                <label htmlFor=\"serviceType\" className=\"fw-bold mt-1\">\n                  Вид послуги:\n                </label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"womanHaircut\"\n                  name=\"serviceType\"\n                  value=\"Жіноча стрижка\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"womanHaircut\">Жіноча стрижка</label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"manHaircut\"\n                  name=\"serviceType\"\n                  value=\"Чоловіча стрижка\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"manHaircut\">Чоловіча стрижка</label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"childHaircut\"\n                  name=\"serviceType\"\n                  value=\"Дитяча стрижка\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"manHaircut\">Дитяча стрижка</label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"hairColoring\"\n                  name=\"serviceType\"\n                  value=\"Фарбування волосся\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"hairColoring\">Фарбування волосся</label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"hairCare\"\n                  name=\"serviceType\"\n                  value=\"Догляд за волоссям\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"otherService\">Догляд за волоссям</label>\n              </>\n            )}\n            {user.beautyMaster === 'Nails master' && (\n              <>\n                <label htmlFor=\"serviceType\" className=\"fw-bold mt-1\">\n                  Вид послуги:\n                </label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"manicur\"\n                  name=\"serviceType\"\n                  value=\"Манікюр (покриття гель-лаком)\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"manicur\">Манікюр (покриття гель-лаком)</label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"gelNails\"\n                  name=\"serviceType\"\n                  value=\"Нарощування гелем\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"gelNails\">Нарощування гелем</label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"pedicur\"\n                  name=\"serviceType\"\n                  value=\"Педикюр\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"pedicur\">Педикюр</label>\n              </>\n            )}\n            {user.beautyMaster === 'Waxing specialist' && (\n              <>\n                <label htmlFor=\"serviceType\" className=\"fw-bold mt-1\">\n                  Оберіть зону для епіляції:\n                </label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"face\"\n                  name=\"serviceType\"\n                  value=\"Лице\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"face\">Лице</label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"arm\"\n                  name=\"serviceType\"\n                  value=\"Руки\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"arm\">Руки</label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"legs\"\n                  name=\"serviceType\"\n                  value=\"Ноги\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"legs\">Ноги</label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"armpits\"\n                  name=\"serviceType\"\n                  value=\"Підмишки\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"armpits\">Підмишки</label>\n                <br />\n                <Field\n                  type=\"checkbox\"\n                  id=\"bikini\"\n                  name=\"serviceType\"\n                  value=\"Бікіні\"\n                  className=\"me-2\"\n                />\n                <label htmlFor=\"bikini\">Бікіні</label>\n              </>\n            )}\n            <br />\n            <Field\n              type=\"checkbox\"\n              id=\"otherService\"\n              name=\"serviceType\"\n              value=\"Інше\"\n              className=\"me-2\"\n            />\n            <label htmlFor=\"otherService\">Інше</label>\n            <ErrorMessage\n              name=\"serviceType\"\n              component=\"div\"\n              className=\"text-danger\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"visitTime\" className=\"fw-bold mt-2\">\n              Час візиту:\n            </label>\n            <div className={`p-0 ${css.selectTime}`}>{renderTimeButtons()}</div>\n            {chooseVisitTimes && (\n              <div className=\"text-danger\">Оберіть час візиту</div>\n            )}\n          </div>\n\n          <div onClick={() => setShowNotes(!showNotes)}>\n            <label htmlFor=\"notes\" className=\"fw-bold mt-1 ms-1\">\n              Додаткова інформація <FaAngleDoubleDown />\n            </label>\n          </div>\n          {showNotes && (\n            <Field\n              as=\"textarea\"\n              id=\"notes\"\n              name=\"notes\"\n              style={{ width: '90%' }}\n              className=\"ms-1\"\n            />\n          )}\n\n          {clientToEdit && (\n            <div className=\"mt-2\">\n              <b className=\"ps-1\">Змінити дату візиту:</b>\n              <br />\n              <label htmlFor=\"date\">\n                д.\n                <input\n                  type=\"number\"\n                  id=\"date\"\n                  name=\"date\"\n                  min=\"1\"\n                  max=\"31\"\n                  value={visitDate.date}\n                  onChange={handleDateVisitChange}\n                  style={{ width: '50px' }}\n                  className=\"ms-1 me-2 ps-1\"\n                />\n              </label>\n              <label htmlFor=\"month\">\n                міс.\n                <input\n                  type=\"number\"\n                  id=\"month\"\n                  name=\"month\"\n                  min=\"1\"\n                  max=\"12\"\n                  value={visitDate.month}\n                  onChange={handleDateVisitChange}\n                  style={{ width: '50px' }}\n                  className=\"ms-1 me-2 ps-1\"\n                />\n              </label>\n              <label htmlFor=\"year\">\n                р.\n                <input\n                  type=\"number\"\n                  id=\"year\"\n                  name=\"year\"\n                  min=\"2024\"\n                  max=\"2030\"\n                  value={visitDate.year}\n                  onChange={handleDateVisitChange}\n                  style={{ width: '70px' }}\n                  className=\"m-1 ps-1\"\n                />\n              </label>\n            </div>\n          )}\n\n          <div className=\"d-flex justify-content-around mt-2 mb-1\">\n            <button type=\"submit\" className={css.btn_save}>\n              Зберегти\n            </button>\n            <button className={css.btn_cancel} onClick={handleAddRecordForm}>\n              Скасувати\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </Col>\n  );\n};\n\nexport default ClientForm;\n","export const selectClients = state => state.clients.items;\nexport const selectLoading = state => state.clients.loading;\nexport const selectError = state => state.clients.error;\nexport const selectFilter = state => state.filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"client_list\":\"ClientList_client_list__uReti\",\"list_box\":\"ClientList_list_box__ahZ69\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteClient } from '../../redux/clients/operations';\nimport { selectClients } from '../../redux/clients/selectors';\nimport { FaAngleDown } from 'react-icons/fa';\nimport { RiDeleteBin2Fill } from 'react-icons/ri';\nimport { FaEdit } from 'react-icons/fa';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport css from './ClientList.module.css';\nimport toast from 'react-hot-toast';\n\nconst ClientList = ({ client, isNotPast, handleEditClient }) => {\n  const [showFullInfoMap, setShowFullInfoMap] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const dispatch = useDispatch();\n  const clients = useSelector(selectClients);\n\n  useEffect(() => {}, [clients]);\n\n  const handleDelete = _id => {\n    dispatch(deleteClient(_id))\n      .then(response => {\n        if (response.meta.requestStatus === 'fulfilled') {\n          toast.success(`Запис успішно видалений!`, {\n            duration: 2000,\n            position: 'top-center',\n          });\n        } else if (response.meta.requestStatus === 'rejected') {\n          toast.error(\n            `Сталася помилка, запис не видалений! Оновіть сторінку та спробуйте знову`,\n            {\n              duration: 3000,\n              position: 'top-center',\n            }\n          );\n        }\n      })\n      .catch(error => {});\n    setShowDeleteModal(false);\n  };\n\n  const toggleShowFullInfo = () => {\n    setShowFullInfoMap(!showFullInfoMap);\n  };\n\n  const formatTime = timeString => {\n    const [hoursStr, minutesStr] = timeString.split(':');\n    let hours = parseInt(hoursStr);\n    let minutes = parseInt(minutesStr);\n\n    minutes += 1;\n\n    if (minutes === 60) {\n      hours += 1;\n      minutes = 0;\n    }\n\n    const formattedHours = hours.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n\n    return `${formattedHours}:${formattedMinutes}`;\n  };\n\n  return (\n    <>\n      <Row className={`gx-0 ${css.client_list}`}>\n        {isNotPast && (\n          <Col xs={1} className=\"my-auto text-center\">\n            <FaEdit\n              size={25}\n              onClick={() => handleEditClient(client._id)}\n              className=\"p-0\"\n            />\n          </Col>\n        )}\n        <Col\n          xs={9}\n          className={`ps-2 pe-2 ms-2 me-2 mb-2 ${css.list_box}`}\n          onClick={() => toggleShowFullInfo()}\n        >\n          <span className=\"fw-bold text-decoration-underline\">\n            {client.visitTimes[0].visitTime} -{' '}\n            {formatTime(\n              client.visitTimes[client.visitTimes.length - 1].visitEndTime\n            )}{' '}\n          </span>\n          <span className=\"fw-semibold\">{client.serviceType.join(', ')}</span>{' '}\n          {showFullInfoMap ? (\n            <FaAngleDown className=\"text-primary\" />\n          ) : (\n            <FaAngleDown />\n          )}\n          {showFullInfoMap && (\n            <>\n              <div className=\"mb-0 text-capitalize\">Ім'я: {client.name}</div>\n              {client.phone && <div>Телефон: {client.phone}</div>}\n              {client.notes && <div>{client.notes}</div>}\n            </>\n          )}\n        </Col>\n        {isNotPast && (\n          <Col xs={1} className=\"my-auto\">\n            <RiDeleteBin2Fill\n              size={25}\n              onClick={() => setShowDeleteModal(true)}\n            />\n          </Col>\n        )}\n      </Row>\n      {showDeleteModal && (\n        <div className=\"border rounded border-danger border-2 ps-2 pe-2 m-1 text-center\">\n          <p className=\"mb-0\">\n            Ви впевнені, що хочете видалити запис на{' '}\n            <span className=\"fw-bolder\">\n              {client.visitTimes[0].visitTime} -{' '}\n              {formatTime(\n                client.visitTimes[client.visitTimes.length - 1].visitEndTime\n              )}{' '}\n            </span>\n            ?\n          </p>\n          <button\n            className=\"btn btn-success mt-1 mb-1 ms-1 me-5\"\n            onClick={() => handleDelete(client._id)}\n          >\n            Видалити\n          </button>\n          <button\n            className=\"btn btn-danger m-1\"\n            onClick={() => setShowDeleteModal(false)}\n          >\n            Скасувати\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ClientList;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allClients } from '../../redux/clients/operations';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format } from 'date-fns';\nimport ukLocale from 'date-fns/locale/uk';\nimport Col from 'react-bootstrap/Col';\nimport css from './HomePage.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ClientForm from './ClientForm';\nimport ClientList from './ClientList';\nimport { selectClients } from '../../redux/clients/selectors';\nimport { selectUser } from '../../redux/auth/selectors';\nimport { updatedUser } from '../../redux/auth/operations';\n\nconst HomePage = () => {\n  const [chooseDate, setChooseDate] = useState(new Date());\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [dateClients, setDateClients] = useState([]);\n  const [isNotPast, setIsNotPast] = useState(true);\n  const [clientToEdit, setClientToEdit] = useState(null);\n  const [isWeekend, setIsWeekend] = useState(false);\n  const clients = useSelector(selectClients);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const currentDate = new Date();\n\n  useEffect(() => {\n    setChooseDate(currentDate);\n    handleDateClick(currentDate);\n    dispatch(allClients());\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    handleDateClick(chooseDate);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chooseDate, clients, ]);\n\n  const onChange = date => {\n    setChooseDate(date);\n    handleDateClick(date);\n    compareDate(date);\n  };\n\n  const compareDate = date => {\n    const currentDateFull = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth(),\n      currentDate.getDate()\n    );\n    const selectedDateFull = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate()\n    );\n    setIsNotPast(selectedDateFull >= currentDateFull);\n  };\n\n  const handleAddRecordForm = () => {\n    setShowAddForm(prevState => !prevState);\n    setClientToEdit(null);\n  };\n\n  const handleDateClick = date => {\n    const selectedClients = clients\n      .filter(\n        item =>\n          item.year === date.getFullYear() &&\n          item.month === date.getMonth() + 1 &&\n          item.date === date.getDate()\n      )\n      .sort((a, b) => {\n        const timeA = a.visitTimes[0].visitTime.split(':');\n        const timeB = b.visitTimes[0].visitTime.split(':');\n        if (parseInt(timeA[0]) !== parseInt(timeB[0])) {\n          return parseInt(timeA[0]) - parseInt(timeB[0]);\n        }\n        return parseInt(timeA[1]) - parseInt(timeB[1]);\n      });\n\n    setDateClients(selectedClients);\n    setIsWeekend(\n      user.freeWorkDays.some(\n        day =>\n          day.year === date.getFullYear() &&\n          day.month === date.getMonth() + 1 &&\n          day.date === date.getDate()\n      )\n    );\n  };\n\n  const handleEditClient = clientId => {\n    const client = clients.find(client => client._id === clientId);\n    setClientToEdit(client);\n    setShowAddForm(true);\n  };\n\n  const toggleWeekend = () => {\n    if (isWeekend) {\n      const updatedFreeWorkDays = user.freeWorkDays\n        .filter(\n          day =>\n            day.year !== chooseDate.getFullYear() ||\n            day.month !== chooseDate.getMonth() + 1 ||\n            day.date !== chooseDate.getDate()\n        )\n        .map(({ _id, ...rest }) => rest);\n      dispatch(\n        updatedUser({\n          id: user._id,\n          freeWorkDays: updatedFreeWorkDays,\n        })\n      );\n      setIsWeekend(!isWeekend);\n    } else {\n      addWeekend();\n    }\n  };\n\n  const addWeekend = () => {\n    const selectedYear = chooseDate.getFullYear();\n    const selectedMonth = chooseDate.getMonth() + 1;\n    const selectedDay = chooseDate.getDate();\n    const freeWorkDay = {\n      date: selectedDay,\n      month: selectedMonth,\n      year: selectedYear,\n    };\n    const currentFreeWorkDays = user.freeWorkDays.map(\n      ({ _id, ...rest }) => rest\n    );\n    const updatedFreeWorkDays = [...currentFreeWorkDays, freeWorkDay];\n\n    dispatch(\n      updatedUser({\n        id: user._id,\n        freeWorkDays: updatedFreeWorkDays,\n      })\n    );\n    setIsWeekend(!isWeekend);\n  };\n\n  const isWeekendSchedule = user.weekendSchedule.includes(String(chooseDate.getDay()))\n\n  return (\n    <Col className=\"d-flex justify-content-center justify-content-lg-end\">\n      <Col xs={12} sm={8} md={6} xl={5}>\n        <Col className={css.listClientsBox}>\n          <div>\n            <div className=\"pb-2\">\n              <h4 className={css.date}>\n                {format(chooseDate, 'd MMMM yyyy', { locale: ukLocale })}\n              </h4>\n\n              {dateClients.length === 0 ? (\n                <p className=\"text-center pb-5\">\n                  {isWeekend || isWeekendSchedule? 'У Вас вихідний день' : 'Клієнтів не має'}\n                </p>\n              ) : (\n                <ul className=\"ps-3 pe-3 list-unstyled\">\n                  {dateClients &&\n                    dateClients.map((clientData, index) => (\n                      <li key={index} className=\"\">\n                        <ClientList\n                          client={clientData}\n                          isNotPast={isNotPast}\n                          handleEditClient={handleEditClient}\n                        />\n                      </li>\n                    ))}\n                </ul>\n              )}\n              {showAddForm && (\n                <ClientForm\n                  date={chooseDate}\n                  handleAddRecordForm={handleAddRecordForm}\n                  dateClients={dateClients}\n                  clientToEdit={clientToEdit}\n                />\n              )}\n\n              {!showAddForm &&\n                isNotPast &&\n                !isWeekend &&\n                !isWeekendSchedule && (\n                  <div className=\"text-center\">\n                    <button\n                      type=\"button\"\n                      className={css.btn_addRecord}\n                      onClick={handleAddRecordForm}\n                    >\n                      Додати запис\n                    </button>\n                  </div>\n                )}\n              {!showAddForm &&\n                isNotPast &&\n                !clientToEdit &&\n                !isWeekendSchedule && (\n                  <div className=\"text-center mt-3 mb-2\">\n                    <button\n                      type=\"button\"\n                      className={`btn ${\n                        isWeekend ? 'btn-success' : 'btn-danger'\n                      }`}\n                      onClick={toggleWeekend}\n                    >\n                      {isWeekend\n                        ? 'Встановити як робочий день'\n                        : 'Встановити як вихідний день'}\n                    </button>\n                  </div>\n                )}\n            </div>\n          </div>\n        </Col>\n        <Col className=\"d-flex justify-content-center bg-white bg-opacity-50\">\n          <DatePicker\n            selected={chooseDate}\n            onChange={onChange}\n            startDate={chooseDate}\n            inline\n            onSelect={handleDateClick}\n            dayClassName={date =>\n              (Array.isArray(user.freeWorkDays) &&\n              user.freeWorkDays.some(\n                day =>\n                  day.year === date.getFullYear() &&\n                  day.month === date.getMonth() + 1 &&\n                  day.date === date.getDate()\n              )\n                ? 'bg-danger bg-opacity-50'\n                : '') +\n              (Array.isArray(user.weekendSchedule) &&\n              user.weekendSchedule.includes(String(date.getDay()))\n                ? 'bg-danger bg-opacity-50'\n                : '') +\n              (clients.some(\n                client =>\n                  client.year === date.getFullYear() &&\n                  client.month === date.getMonth() + 1 &&\n                  client.date === date.getDate()\n              )\n                ? 'bg-success-subtle'\n                : '')\n            }\n          />\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default HomePage;\n","import HomePage from '../components/HomePage/HomePage';\n\nconst Home = () => {\n  return <HomePage />;\n};\nexport default Home;\n"],"names":["validationSchema","Yup","shape","name","required","phone","serviceType","of","min","notes","date","handleAddRecordForm","dateClients","clientToEdit","dispatch","useDispatch","useState","showNotes","setShowNotes","visitTimes","setVisitTimes","month","year","visitDate","setVisitDate","chooseVisitTimes","setChooseVisitTimes","nextInputRef","useRef","user","useSelector","selectUser","useEffect","map","time","isSelected","handleDateVisitChange","e","target","value","prevState","handleTimeSelection","selectedTime","prevVisitTimes","some","visitTime","filter","newVisitTimes","sort","a","b","Date","initialValues","Col","className","onSubmit","values","resetForm","length","_id","owner","rest","updatedClient","id","toLowerCase","Number","editClient","then","response","meta","requestStatus","toast","success","duration","position","allClients","error","catch","newClient","getDate","getMonth","getFullYear","addClient","current","focus","css","onClick","type","placeholder","component","innerRef","beautyMaster","htmlFor","buttons","hourStart","workHourStart","hourEnd","workHourEnd","timeString","hour","toString","padStart","minute","isAvailable","client","visitEndTime","clientStartTime","parseInt","split","clientEndTime","isTimeSlotAvailable","isEditingTime","visitStartTime","editingTime","push","disabled","renderTimeButtons","as","style","width","max","onChange","selectClients","state","clients","items","isNotPast","handleEditClient","showFullInfoMap","setShowFullInfoMap","showDeleteModal","setShowDeleteModal","formatTime","hoursStr","minutesStr","hours","minutes","formattedHours","formattedMinutes","Row","xs","size","join","deleteClient","chooseDate","setChooseDate","showAddForm","setShowAddForm","setDateClients","setIsNotPast","setClientToEdit","isWeekend","setIsWeekend","currentDate","handleDateClick","compareDate","currentDateFull","selectedDateFull","selectedClients","item","timeA","timeB","freeWorkDays","day","clientId","find","addWeekend","selectedYear","selectedMonth","freeWorkDay","currentFreeWorkDays","updatedFreeWorkDays","updatedUser","isWeekendSchedule","weekendSchedule","includes","String","getDay","sm","md","xl","format","locale","ukLocale","clientData","index","selected","startDate","inline","onSelect","dayClassName","Array","isArray"],"sourceRoot":""}